//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Plane"",
            ""id"": ""c7f86140-7852-43b7-af8a-e120f923445d"",
            ""actions"": [
                {
                    ""name"": ""ToggleHelp"",
                    ""type"": ""Button"",
                    ""id"": ""a601469b-e3aa-422a-806a-4f7dcba55332"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""0d46f8f2-2f6f-4fe2-8623-427c869c3bde"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RollPitch"",
                    ""type"": ""Value"",
                    ""id"": ""7173b259-7215-456e-ba7f-dba1aaad27e1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""56c160cd-3545-4284-abef-8d6eb62ab74c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""cdd2542b-3da6-4431-be9c-bbf306e4dcd5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleFlaps"",
                    ""type"": ""Button"",
                    ""id"": ""0e572958-b17b-4a43-950d-d9a9324fbc89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireMissile"",
                    ""type"": ""Button"",
                    ""id"": ""54bc0053-bbe2-45cd-80b6-dd2a4f0dee6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireCannon"",
                    ""type"": ""Button"",
                    ""id"": ""cc901d01-643f-4c28-918b-23ed83f6433c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleAI"",
                    ""type"": ""Button"",
                    ""id"": ""b0d256fa-cc8c-4a22-925d-479ad7049947"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7c10a109-7067-4ed9-8ac3-9c62dd974876"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""db898ab6-62ed-46c8-aa8c-185c8d579b9d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""576b7d67-9a4c-42d1-be0c-aa52f335341a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1ca0b0f3-653c-4fbd-9a90-369d6172ca84"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""748f3d52-8dfe-44c1-a6fe-e995cb2b9856"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2af7fecd-1e85-4813-a91d-263b6445513a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9114f377-1c7f-4991-a591-b668ae086658"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""1e09ebaa-d1d0-40f6-a3f0-c198abbd2e93"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f270f6f0-981d-4d6d-9e1e-99ad1b600877"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""36322ce5-82c7-4fde-a21a-ae11c79eb687"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""048c818c-fb51-4e77-8f08-8ddabac769c3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f10b537-8674-4f85-8d78-3da0d19cbe14"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RollPitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""ce6f2e33-ba5f-413f-87b7-13c3eb5d890a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9c73b4a5-cd71-42e9-a47b-fc94c0dc4536"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4f8b04ef-9161-4bc7-8b96-20890e94362f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""45163a0d-825d-4388-9771-5cc782697311"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b4e38a0-f793-4d60-bcda-53f58cf07745"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleFlaps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f0a780e-ba4d-4467-a1fe-9234a00c0440"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHelp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c854cd2e-491a-4639-9836-296333fced16"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireMissile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8cd153b-2c78-4690-b96d-88366b14cb64"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireCannon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d71bddd5-5fbb-4ffd-a940-080749cc27ad"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Plane
        m_Plane = asset.FindActionMap("Plane", throwIfNotFound: true);
        m_Plane_ToggleHelp = m_Plane.FindAction("ToggleHelp", throwIfNotFound: true);
        m_Plane_Throttle = m_Plane.FindAction("Throttle", throwIfNotFound: true);
        m_Plane_RollPitch = m_Plane.FindAction("RollPitch", throwIfNotFound: true);
        m_Plane_Yaw = m_Plane.FindAction("Yaw", throwIfNotFound: true);
        m_Plane_Camera = m_Plane.FindAction("Camera", throwIfNotFound: true);
        m_Plane_ToggleFlaps = m_Plane.FindAction("ToggleFlaps", throwIfNotFound: true);
        m_Plane_FireMissile = m_Plane.FindAction("FireMissile", throwIfNotFound: true);
        m_Plane_FireCannon = m_Plane.FindAction("FireCannon", throwIfNotFound: true);
        m_Plane_ToggleAI = m_Plane.FindAction("ToggleAI", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Plane
    private readonly InputActionMap m_Plane;
    private List<IPlaneActions> m_PlaneActionsCallbackInterfaces = new List<IPlaneActions>();
    private readonly InputAction m_Plane_ToggleHelp;
    private readonly InputAction m_Plane_Throttle;
    private readonly InputAction m_Plane_RollPitch;
    private readonly InputAction m_Plane_Yaw;
    private readonly InputAction m_Plane_Camera;
    private readonly InputAction m_Plane_ToggleFlaps;
    private readonly InputAction m_Plane_FireMissile;
    private readonly InputAction m_Plane_FireCannon;
    private readonly InputAction m_Plane_ToggleAI;
    public struct PlaneActions
    {
        private @PlayerInput m_Wrapper;
        public PlaneActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleHelp => m_Wrapper.m_Plane_ToggleHelp;
        public InputAction @Throttle => m_Wrapper.m_Plane_Throttle;
        public InputAction @RollPitch => m_Wrapper.m_Plane_RollPitch;
        public InputAction @Yaw => m_Wrapper.m_Plane_Yaw;
        public InputAction @Camera => m_Wrapper.m_Plane_Camera;
        public InputAction @ToggleFlaps => m_Wrapper.m_Plane_ToggleFlaps;
        public InputAction @FireMissile => m_Wrapper.m_Plane_FireMissile;
        public InputAction @FireCannon => m_Wrapper.m_Plane_FireCannon;
        public InputAction @ToggleAI => m_Wrapper.m_Plane_ToggleAI;
        public InputActionMap Get() { return m_Wrapper.m_Plane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlaneActions set) { return set.Get(); }
        public void AddCallbacks(IPlaneActions instance)
        {
            if (instance == null || m_Wrapper.m_PlaneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlaneActionsCallbackInterfaces.Add(instance);
            @ToggleHelp.started += instance.OnToggleHelp;
            @ToggleHelp.performed += instance.OnToggleHelp;
            @ToggleHelp.canceled += instance.OnToggleHelp;
            @Throttle.started += instance.OnThrottle;
            @Throttle.performed += instance.OnThrottle;
            @Throttle.canceled += instance.OnThrottle;
            @RollPitch.started += instance.OnRollPitch;
            @RollPitch.performed += instance.OnRollPitch;
            @RollPitch.canceled += instance.OnRollPitch;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @ToggleFlaps.started += instance.OnToggleFlaps;
            @ToggleFlaps.performed += instance.OnToggleFlaps;
            @ToggleFlaps.canceled += instance.OnToggleFlaps;
            @FireMissile.started += instance.OnFireMissile;
            @FireMissile.performed += instance.OnFireMissile;
            @FireMissile.canceled += instance.OnFireMissile;
            @FireCannon.started += instance.OnFireCannon;
            @FireCannon.performed += instance.OnFireCannon;
            @FireCannon.canceled += instance.OnFireCannon;
            @ToggleAI.started += instance.OnToggleAI;
            @ToggleAI.performed += instance.OnToggleAI;
            @ToggleAI.canceled += instance.OnToggleAI;
        }

        private void UnregisterCallbacks(IPlaneActions instance)
        {
            @ToggleHelp.started -= instance.OnToggleHelp;
            @ToggleHelp.performed -= instance.OnToggleHelp;
            @ToggleHelp.canceled -= instance.OnToggleHelp;
            @Throttle.started -= instance.OnThrottle;
            @Throttle.performed -= instance.OnThrottle;
            @Throttle.canceled -= instance.OnThrottle;
            @RollPitch.started -= instance.OnRollPitch;
            @RollPitch.performed -= instance.OnRollPitch;
            @RollPitch.canceled -= instance.OnRollPitch;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @ToggleFlaps.started -= instance.OnToggleFlaps;
            @ToggleFlaps.performed -= instance.OnToggleFlaps;
            @ToggleFlaps.canceled -= instance.OnToggleFlaps;
            @FireMissile.started -= instance.OnFireMissile;
            @FireMissile.performed -= instance.OnFireMissile;
            @FireMissile.canceled -= instance.OnFireMissile;
            @FireCannon.started -= instance.OnFireCannon;
            @FireCannon.performed -= instance.OnFireCannon;
            @FireCannon.canceled -= instance.OnFireCannon;
            @ToggleAI.started -= instance.OnToggleAI;
            @ToggleAI.performed -= instance.OnToggleAI;
            @ToggleAI.canceled -= instance.OnToggleAI;
        }

        public void RemoveCallbacks(IPlaneActions instance)
        {
            if (m_Wrapper.m_PlaneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlaneActions instance)
        {
            foreach (var item in m_Wrapper.m_PlaneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlaneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlaneActions @Plane => new PlaneActions(this);
    public interface IPlaneActions
    {
        void OnToggleHelp(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnRollPitch(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnToggleFlaps(InputAction.CallbackContext context);
        void OnFireMissile(InputAction.CallbackContext context);
        void OnFireCannon(InputAction.CallbackContext context);
        void OnToggleAI(InputAction.CallbackContext context);
    }
}
